/*
 * Ultrasonic.c
 *
 *  Created on: May 4, 2024
 *      Author: moham
 */

#include "Ultrasonic.h"
#include "stm32f4xx_hal.h"

extern TIM_HandleTypeDef htim1;




void delay (uint16_t time)
{
	__HAL_TIM_SET_COUNTER(&htim1, 0);
	while (__HAL_TIM_GET_COUNTER (&htim1) < time);
}

uint32_t g_TimeOfEcho ;
uint8_t Is_First_Captured = 0;  // is the first value captured ?



// Let's write the callback function

void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
	if (htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)  // if the interrupt source is channel1
	{
		if (Is_First_Captured==0) // if the first value is not captured
		{
			__HAL_TIM_SET_COUNTER(&htim1, 0);  // reset the counter
			Is_First_Captured = 1;  // set the first captured as true
			// Now change the polarity to falling edge
			__HAL_TIM_SET_CAPTUREPOLARITY(&htim1, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_FALLING);
		}

		else if (Is_First_Captured==1)   // if the first is already captured
		{
			g_TimeOfEcho = HAL_TIM_ReadCapturedValue(&htim1, TIM_CHANNEL_1);  // read second value
			__HAL_TIM_SET_CAPTUREPOLARITY(&htim1, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_RISING);
			__HAL_TIM_DISABLE_IT(&htim1, TIM_IT_CC1);

			Is_First_Captured = 0; // set it back to false
			
		}
	}
}


uint16_t  Ultrasonic_Distance (void)
{

}