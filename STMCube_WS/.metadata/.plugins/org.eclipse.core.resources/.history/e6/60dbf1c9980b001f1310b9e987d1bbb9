/*
 * Ultrasonic.c
 *
 *  Created on: May 4, 2024
 *      Author: moham
 */

#include "stm32f4xx_hal.h"
#include "Ultrasonic.h"

extern TIM_HandleTypeDef htim1;

volatile uint8_t DistanceReadUltrasonic [6] = {};


static UltrasonicPin[] = {TRIG_PIN_1,TRIG_PIN_2,TRIG_PIN_3,TRIG_PIN_4};
static UltrasonicPort[] ={TRIG_PORT_1,TRIG_PORT_2,TRIG_PORT_3,TRIG_PORT_4 };
static UltrasonicChannel[] = {TIM_CHANNEL_1,TIM_CHANNEL_2,TIM_CHANNEL_3,TIM_CHANNEL_4};


void delay (uint16_t time)
{
	__HAL_TIM_SET_COUNTER(&htim1, 0);
	while (__HAL_TIM_GET_COUNTER (&htim1) < time);
}

volatile uint32_t g_TimeOfEcho ;
volatile uint8_t g_edgeDetect = 0;  // is the first value captured ?



// Let's write the callback function

void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{


	if (htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)  // if the interrupt source is channel1
	{
		g_edgeDetect++;
		if (g_edgeDetect==1) // if the first value is not captured
		{
			__HAL_TIM_SET_COUNTER(&htim1, 0);  // reset the counter

			// Now change the polarity to falling edge
			__HAL_TIM_SET_CAPTUREPOLARITY(&htim1, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_FALLING);

			__HAL_TIM_ENABLE_IT(&htim1, TIM_IT_CC1);
		}

		else if (g_edgeDetect==2)   // if the first is already captured
		{
			g_TimeOfEcho = HAL_TIM_ReadCapturedValue(&htim1, TIM_CHANNEL_1);  // read second value
			__HAL_TIM_SET_CAPTUREPOLARITY(&htim1, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_RISING);
			__HAL_TIM_DISABLE_IT(&htim1, TIM_IT_CC1);

			
		}
	}
}


uint16_t  Ultrasonic_Distance (void)
{
	__HAL_TIM_ENABLE_IT(&htim1, TIM_IT_CC1);
	HAL_GPIO_WritePin(TRIG_PORT_1, TRIG_PIN_1, GPIO_PIN_SET);  // pull the TRIG pin HIGH
	delay(10);  // wait for 10 us
	HAL_GPIO_WritePin(TRIG_PORT_1, TRIG_PIN_1, GPIO_PIN_RESET);  // pull the TRIG pin low



	/*  wait until catch riging and failing edge for Echo */
    while(g_edgeDetect != 2);

	/*  Make it equal zero to be able to perform same operation*/
    g_edgeDetect = 0 ;

    return ((uint32_t)g_TimeOfEcho / 57.5);
}


void Ultrasonic_Init(void)
{
	for(uint8_t it = 0 ; it < UltrasonicNum , it++ )
	{
		HAL_TIM_IC_Start_IT(&htim1, UltrasonicChannel[it]);
	}
	
}
